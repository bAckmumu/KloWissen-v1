#!/usr/bin/python3

import RPi.GPIO as GPIO
import smbus
# from subprocess import call
# from subprocess import check_output
from time import sleep
from datetime import datetime
from pygame import mixer

mediaPath="/home/pi/gPodder/Downloads"
streamPath="test.mp3"  #"https://detektor.fm/stream/mp3/musik/"

bus = smbus.SMBus(1)
sensorAddress = 0x70
chainPin = 24
chainOldValue = False
isPlaying = False

def Stop():
    # print("Stop")
    mixer.music.stop()

def Play():
    # print("Play")
    mixer.music.play()

def Load( filePath ):
    # print("Load", filePath) 
    mixer.music.load(filePath)

def SetVolume():
    hourOfDay = datetime.now().time().hou
    # print("SetVolume hourOfDay: ", hourOfDay)
    if hourOfDay < 8 or hourOfDay > 22: 
        # print("SetVolume, to 70%")
        mixer.music.set_volume(0.7)
    else:
        # print("SetVolume: 100")
        mixer.music.set_volume(0.7)

def PlayRadio():
    global isPlaying
    # print("PlayRadio")
    if isPlaying == False:
        Load( streamPath )
        Play()
        isPlaying = True
    else:
        Stop()
        isPlaying = False

def PlayPodcast():
    global isPlaying
    # print("PlayPodcast")
    if isPlaying == False:
        Load( streamPath )
        Play()
        isPlaying = True

def ReadChainSwitch():
    global chainOldValue
    chainNewValue = GPIO.input(chainPin)
    #sleep(1.0)
    if chainNewValue != chainOldValue:
        # print("ReadChainSwitch, somebody pulls the chain)"
        chainOldValue = chainNewValue
        return True
    else:
        return False

def ReadUltraSonicSensor():
    # https://www.linuxtut.com/en/8e8f385f35976dcc65e8/
    bus.write_i2c_block_data(sensorAddress,0x00,[0x51])
    sleep(0.1)
    block = bus.read_i2c_block_data(sensorAddress,0x00,6)
    if(block[0]==6):
        distance = (block[2]<<8 | block[3])
    else:
        distance = (block[2]<<8 | block[3]) + block[4]
    # print("ReadUltraSonicSensor, distance: ", distance)

    if distance < 60 and distance > 30: # - 5 || distanceNewValue > distanceOldValue + 5 :
        #print("ReadUltraSonicSensor(): somebody sits on the toilet: ", distance)
        return True
    else:
        #print("ReadUltraSonicSensor(): somebody leafs the toilet: ", distance)
        return False

def Main():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(chainPin, GPIO.IN)

    #print("Main, starting the mixer")
    mixer.init()

    while True:
        if ReadUltraSonicSensor():
            PlayPodcast()
        elif ReadChainSwitch():
            PlayRadio()

        sleep(1.0)

Main()
